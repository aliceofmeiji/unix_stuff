	//fib test
	/*
	*(mem + 0x00) = 0xB0;	// lod r0
	*(mem + 0x01) = 0x01;	// # 01
	*(mem + 0x02) = 0xB4;	// lod r1
	*(mem + 0x03) = 0x01;	// # 01
	*(mem + 0x04) = 0x86;	// cp r1 r2
	*(mem + 0x05) = 0x08;	// add r2 r0
	*(mem + 0x06) = 0x84;	// cp r1 r0
	*(mem + 0x07) = 0x89;	// cp r2 r1
	*(mem + 0x08) = 0xE0;	// wta r0
	*(mem + 0x09) = 0x00;	// @ 00
	*(mem + 0x0A) = 0x01;	// @ 01
	*(mem + 0x0B) = 0xE4;	// wta r1
	*(mem + 0x0C) = 0x00;	// @ 00
	*(mem + 0x0D) = 0x03;	// @ 03
	*(mem + 0x0E) = 0xE8;	// wta r2
	*(mem + 0x0F) = 0x10;	// @ 10
	*(mem + 0x10) = 0x00;	// @ 00
	*(mem + 0x11) = 0xBC;	// lod r3
	*(mem + 0x12) = 0xe8;	// @ e8
	*(mem + 0x13) = 0x2E;	// cmp r3 r2
	*(mem + 0x14) = 0x94;	// jmp 0100
	*(mem + 0x15) = 0x00;	// @ 00
	*(mem + 0x16) = 0x00;	// @ 00
	*(mem + 0x17) = 0xA0;	// chf 0000
	*(mem + 0x18) = 0x90;	// jmp 0000
	*(mem + 0x19) = 0xFF;	// @ FF
	*(mem + 0x1A) = 0xFE;	// @ FE
	*/

	//cmp test
	/*(mem + 0x00) = 0xB0;	// lod r0
	*(mem + 0x01) = 0x33;	// # 33
	*(mem + 0x02) = 0xB4;	// lod r1
	*(mem + 0x03) = 0x33;	// # 2E
	*(mem + 0x04) = 0x21;	// cmp r0 r1
	*(mem + 0x05) = 0x91;	// jmp 0001
	*(mem + 0x06) = 0x00;	// @ 00
	*(mem + 0x07) = 0x00;	// @ 00 */
	
	//*(mem + 0x) = 0x;	// 

	//addition test ok
	//*(reg + 0) = 0x05;
	//*(reg + 1) = 0x04;
	//*(mem + 0) = 0x01;
	//*(mem + 1) = 0x01;
	
	//write to addr in next addr test
	/**(mem + 0x00) = 0xB0;	// lod r0
	*(mem + 0x01) = 0x11;	// # 04
	*(mem + 0x02) = 0xB4;	// lod r1
	*(mem + 0x03) = 0x22;	// # 06
	*(mem + 0x04) = 0x01;	// add r0 r1
	*(mem + 0x05) = 0xE0;	// wta r0
	*(mem + 0x06) = 0x10;	// @ 10
	*(mem + 0x07) = 0x00;	// @ 00
	*(mem + 0x08) = 0xDC;	// lda r3
	*(mem + 0x09) = 0x10;	// @ 10
	*(mem + 0x10) = 0x00;	// @ 00
	*(mem + 0x11) = 0x98;	// jmp 0000
	*(mem + 0x12) = 0x00;	// @ 00
	*(mem + 0x13) = 0x00;	// @ 01 */

	//subtraction test
	/*(mem + 0x00) = 0xB0;	// lod r0
	*(mem + 0x01) = 0x99;	// # 08
	*(mem + 0x02) = 0xB4;	// lod r1
	*(mem + 0x03) = 0x72;	// # 02
	*(mem + 0x04) = 0x14;	// not r1
	*(mem + 0x05) = 0x01;	// add r0 r1
	*(mem + 0x06) = 0xE0;	// wta r0
	*(mem + 0x07) = 0x10;	// @ 10
	*(mem + 0x08) = 0x00;	// @ 00 */

	//read test / alu test
	
	/**(mem + 0) = 0xB0;
	*(mem + 1) = 0xFF;
	*(mem + 2) = 0xB4;
	*(mem + 3) = 0x01;
	*(mem + 4) = 0xC0;
	*(mem + 5) = 0x00;
	*(mem + 6) = 0xB8;*/
	//*(mem + 4) = 0x01; //add
	//*(mem + 5) = 0x01; //add
	//*(mem + 4) = 0x11; //not
	//*(mem + 4) = 0x31; //and
	//*(mem + 4) = 0x41; //or
	//*(mem + 4) = 0x51; //xor
	//*(mem + 4) = 0x61; //shl
	//*(mem + 4) = 0x71; //shr

	/* 
	*(mem + 1) = 0x03;
	*(mem + 2) = 0x81;
	*(mem + 3) = 0x01;
	*(mem + 4) = 0xC0;
	*(mem + 5) = 0xFF;
	*(mem + 6) = 0xFF;
	*(mem + 7) = 0xFF;
	*(mem + 8) = 0xFF;
	*(mem + 9) = 0xFF;
	*/
